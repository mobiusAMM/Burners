/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minima, MinimaInterface } from "../Minima";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "initialTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "initialDexes",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "DexAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "FeesClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenFrom",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_DENOM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dexAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dexKnown",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dexs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenFromIndex",
        type: "uint256",
      },
    ],
    name: "fillBoard",
    outputs: [
      {
        internalType: "address[][]",
        name: "exchanges",
        type: "address[][]",
      },
      {
        internalType: "uint256[]",
        name: "parents",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "arbExists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getBestExchange",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "exchange",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getExpectedOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "exchangePath",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "exchangePath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getExpectedOutFromPath",
    outputs: [
      {
        internalType: "uint256",
        name: "expectedOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenFromIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutIndex",
        type: "uint256",
      },
      {
        internalType: "address[][]",
        name: "exchanges",
        type: "address[][]",
      },
      {
        internalType: "uint256[]",
        name: "parents",
        type: "uint256[]",
      },
    ],
    name: "getPathFromBoard",
    outputs: [
      {
        internalType: "address[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "exchangePath",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "exchangePath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "actualAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "swapOnChain",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "updateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "$d6e5c99d87b2345c74da754aa234a52975$__9063ed72480490610f009087908590600401612d54565b60206040518083038186803b158015610f1857600080fd5b505af4158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5091906126e3565b925050935093915050565b610f636120db565b6001600160a01b0316610f746115af565b6001600160a01b031614610f9a5760405162461bcd60e51b81526004016103bf90612bc8565b610fa46000612242565b565b60006001865111610fc95760405162461bcd60e51b81526004016103bf90612ca2565b60018651610fd791906130e3565b855114610ff65760405162461bcd60e51b81526004016103bf90612aec565b60008660008151811061101957634e487b7160e01b600052603260045260246000fd5b60200260200101519050806001600160a01b03166323b872dd3330886040518463ffffffff1660e01b81526004016110539392919061283e565b602060405180830381600087803b15801561106d57600080fd5b505af1158015611081573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a591906126ab565b6110c15760405162461bcd60e51b81526004016103bf90612ab5565b84915060005b865181108015611111575060006001600160a01b03168782815181106110fd57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614155b1561142457600087828151811061113857634e487b7160e01b600052603260045260246000fd5b6020026020010151905088828151811061116257634e487b7160e01b600052603260045260246000fd5b60200260200101519250600089836111799061311d565b9350838151811061119a57634e487b7160e01b600052603260045260246000fd5b602002602001015190506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016111d2919061282a565b60206040518083038186803b1580156111ea57600080fd5b505afa1580156111fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122291906126e3565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081529091506001600160a01b0386169063095ea7b39061126c9086908a906004016128e8565b602060405180830381600087803b15801561128657600080fd5b505af115801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be91906126ab565b6112da5760405162461bcd60e51b81526004016103bf90612b91565b6040517ffe0291560000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063fe0291569061132690889086908b90600090600401612862565b602060405180830381600087803b15801561134057600080fd5b505af1158015611354573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137891906126e3565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815281906001600160a01b038416906370a08231906113c090309060040161282a565b60206040518083038186803b1580156113d857600080fd5b505afa1580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141091906126e3565b61141a91906130e3565b95505050506110c7565b6000600654600554856114379190613050565b6114419190612e61565b905061144d81856130e3565b93508584101561146f5760405162461bcd60e51b81526004016103bf90612a21565b88828151811061148f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031663a9059cbb86866040518363ffffffff1660e01b81526004016114c49291906128e8565b602060405180830381600087803b1580156114de57600080fd5b505af11580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151691906126ab565b507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe2358960008151811061155957634e487b7160e01b600052603260045260246000fd5b60200260200101518a848151811061158157634e487b7160e01b600052603260045260246000fd5b6020026020010151898760405161159b9493929190612862565b60405180910390a150505095945050505050565b6000546001600160a01b031690565b60045481565b606080600060045467ffffffffffffffff8111156115f257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561161b578160200160208202803683370190505b5090506000600160045461162f91906130e3565b67ffffffffffffffff81111561165557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561167e578160200160208202803683370190505b50905060045467ffffffffffffffff8111156116aa57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156116d3578160200160208202803683370190505b50935060016004546116e591906130e3565b67ffffffffffffffff81111561170b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611734578160200160208202803683370190505b5092508660005b8982146118a85760045481106117635760405162461bcd60e51b81526004016103bf90612c34565b600087838151811061178557634e487b7160e01b600052603260045260246000fd5b60200260200101519050600283815481106117b057634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03168583815181106117ee57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505088818151811061182e57634e487b7160e01b600052603260045260246000fd5b6020026020010151838151811061185557634e487b7160e01b600052603260045260246000fd5b60200260200101518483806118699061311d565b94508151811061188957634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152915061173b565b60028a815481106118c957634e487b7160e01b600052603260045260246000fd5b600091825260208220015487516001600160a01b039091169188916118fe57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015260015b818111611a10578461192b82846130e3565b8151811061194957634e487b7160e01b600052603260045260246000fd5b602002602001015187828151811061197157634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528361199482846130e3565b815181106119b257634e487b7160e01b600052603260045260246000fd5b6020026020010151866001836119c891906130e3565b815181106119e657634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280611a088161311d565b915050611919565b505050505094509492505050565b611a266120db565b6001600160a01b0316611a376115af565b6001600160a01b031614611a5d5760405162461bcd60e51b81526004016103bf90612bc8565b7fcf5b6c438b64611d8ee0722509d7ad5149d4f779f0b29bc845152f0d89e42e19611a866115af565b60055483604051611a9993929190612901565b60405180910390a1600555565b60036020526000908152604090205460ff1681565b600281815481106104ec57600080fd5b60006001845111611aee5760405162461bcd60e51b81526004016103bf90612ca2565b60018451611afc91906130e3565b835114611b1b5760405162461bcd60e51b81526004016103bf90612aec565b508060005b835181108015611b6a575060006001600160a01b0316848281518110611b5657634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614155b15611c7757838181518110611b8f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031663c515ee23868381518110611bc557634e487b7160e01b600052603260045260246000fd5b60200260200101518784611bd89061311d565b94508481518110611bf957634e487b7160e01b600052603260045260246000fd5b6020026020010151856040518463ffffffff1660e01b8152600401611c209392919061283e565b60206040518083038186803b158015611c3857600080fd5b505afa158015611c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7091906126e3565b9150611b20565b509392505050565b611c876120db565b6001600160a01b0316611c986115af565b6001600160a01b031614611cbe5760405162461bcd60e51b81526004016103bf90612bc8565b60005b600254811015611d3b57816001600160a01b031660028281548110611cf657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415611d295760405162461bcd60e51b81526004016103bf90612c6b565b80611d338161311d565b915050611cc1565b506002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384161790556004805491611dac8361311d565b91905055507f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a481604051611de0919061282a565b60405180910390a150565b611df36120db565b6001600160a01b0316611e046115af565b6001600160a01b031614611e2a5760405162461bcd60e51b81526004016103bf90612bc8565b60005b600454811015611f9857600060028281548110611e5a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031690508063a9059cbb611e7f6115af565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038516906370a0823190611ec490309060040161282a565b60206040518083038186803b158015611edc57600080fd5b505afa158015611ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1491906126e3565b6040518363ffffffff1660e01b8152600401611f319291906128e8565b602060405180830381600087803b158015611f4b57600080fd5b505af1158015611f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8391906126ab565b50508080611f909061311d565b915050611e2d565b507fc708bc9126baf78945ae1d05c03aa332ca0460db0e59169024d96f0188f411d1611fc26115af565b604051611fcf919061282a565b60405180910390a1565b60055481565b611fe76120db565b6001600160a01b0316611ff86115af565b6001600160a01b03161461201e5760405162461bcd60e51b81526004016103bf90612bc8565b6001600160a01b0381166120445760405162461bcd60e51b81526004016103bf90612a58565b61204d81612242565b50565b6000805b6004548110156120bd57826001600160a01b03166002828154811061208957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156120ab5790506120d6565b806120b58161311d565b915050612054565b5060405162461bcd60e51b81526004016103bf90612bfd565b919050565b3390565b60008082116121005760405162461bcd60e51b81526004016103bf90612b23565b81600061210c826122aa565b905060808160ff161115612132576121256080826130fa565b60ff1682901c9150612152565b60808160ff161015612152576121498160806130fa565b60ff1682901b91505b6fffffffffffffffffffffffffffffffff9190911690600060806121798160ff851661306f565b901b90506f8000000000000000000000000000000060005b60808160ff161080156121a45750600085115b156122375760806f800000000000000000000000000000006121c68780613050565b6121d09190612e24565b6121df911c600187901b612e24565b94506fffffffffffffffffffffffffffffffff85111561221e579181179161221b6f80000000000000000000000000000000600187901c6130e3565b94505b60019190911d908061222f81613138565b915050612191565b509095945050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008082116122b857600080fd5b5060008170010000000000000000000000000000000081106122e757608090811c906122e49083612e3c565b91505b68010000000000000000811061230a57604090811c906123079083612e3c565b91505b640100000000811061232957602090811c906123269083612e3c565b91505b62010000811061234657601090811c906123439083612e3c565b91505b610100811061236257600890811c9061235f9083612e3c565b91505b6010811061237d57600490811c9061237a9083612e3c565b91505b6004811061239857600290811c906123959083612e3c565b91505b600281106123ae576123ab600183612e3c565b91505b50919050565b80356001600160a01b03811681146120d657600080fd5b600082601f8301126123db578081fd5b813560206123f06123eb83612d8c565b612d62565b828152818101908583018385028701840188101561240c578586fd5b855b858110156124315761241f826123b4565b8452928401929084019060010161240e565b5090979650505050505050565b600082601f83011261244e578081fd5b8135602061245e6123eb83612d8c565b828152818101908583018385028701840188101561247a578586fd5b855b858110156124315781358452928401929084019060010161247c565b6000602082840312156124a9578081fd5b6124b2826123b4565b9392505050565b6000806000606084860312156124cd578182fd5b6124d6846123b4565b92506124e4602085016123b4565b9150604084013590509250925092565b600080600080600060a0868803121561250b578081fd5b612514866123b4565b9450612522602087016123b4565b9350604086013592506060860135915061253e608087016123b4565b90509295509295909350565b60008060006040848603121561255e578283fd5b612567846123b4565b9250602084013567ffffffffffffffff80821115612583578384fd5b818601915086601f830112612596578384fd5b8135818111156125a4578485fd5b8760208285010111156125b5578485fd5b6020830194508093505050509250925092565b6000806000606084860312156125dc578283fd5b833567ffffffffffffffff808211156125f3578485fd5b6125ff878388016123cb565b94506020860135915080821115612614578384fd5b50612621868287016123cb565b925050604084013590509250925092565b600080600080600060a08688031215612649578081fd5b853567ffffffffffffffff80821115612660578283fd5b61266c89838a016123cb565b96506020880135915080821115612681578283fd5b5061268e888289016123cb565b945050604086013592506060860135915061253e608087016123b4565b6000602082840312156126bc578081fd5b815180151581146124b2578182fd5b6000602082840312156126dc578081fd5b5035919050565b6000602082840312156126f4578081fd5b5051919050565b60008060008060808587031215612710578182fd5b843593506020808601359350604086013567ffffffffffffffff80821115612736578485fd5b818801915088601f830112612749578485fd5b81356127576123eb82612d8c565b81815284810190848601885b8481101561278c5761277a8e8984358a01016123cb565b84529287019290870190600101612763565b5090975050505060608801359250808311156127a6578384fd5b50506127b48782880161243e565b91505092959194509250565b6000602082840312156127d1578081fd5b815160ff811681146124b2578182fd5b6000815180845260208085019450808401835b838110156128195781516001600160a01b0316875295820195908201906001016127f4565b509495945050505050565b15159052565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60006001600160a01b03851682526040602083015282604083015282846060840137818301606090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010192915050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b60006040825261293560408301856127e1565b828103602084015261294781856127e1565b95945050505050565b60006060820160608352808651808352608085019150602092506080838202860101838901855b838110156129c3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808884030185526129b18383516127e1565b94860194925090850190600101612977565b505085810384870152875180825290840192509050868301845b828110156129f9578151845292840192908401906001016129dd565b5050508092505050612a0e6040830184612824565b949350505050565b901515815260200190565b60208082526015908201527f536c6970706167652077617320746f6f20686967680000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600f908201527f5472616e73666572206661696c65640000000000000000000000000000000000604082015260600190565b6020808252601e908201527f45786368616e6765207061746820696e636f7272656374206c656e6774680000604082015260600190565b60208082526019908201527f4d757374206265206120706f736974697665206e756d62657200000000000000604082015260600190565b60208082526019908201527f4445582068617320616c72656164206265656e20616464656400000000000000604082015260600190565b6020808252600f908201527f417070726f76616c206661696c65640000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526013908201527f546f6b656e206e6f7420737570706f7274656400000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f207061746820657869737473000000000000000000000000000000000000604082015260600190565b60208082526013908201527f546f6b656e20616c726561647920616464656400000000000000000000000000604082015260600190565b60208082526024908201527f50617468206d75737420636f6e7461696e2061746c656173742074776f20746f60408201527f6b656e7300000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b600084825260606020830152612d3860608301856127e1565b8281036040840152612d4a81856127e1565b9695505050505050565b918252602082015260400190565b60405181810167ffffffffffffffff81118282101715612d8457612d8461316e565b604052919050565b600067ffffffffffffffff821115612da657612da661316e565b5060209081020190565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615612dea57612dea613158565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615612e1e57612e1e613158565b50500190565b60008219821115612e3757612e37613158565b500190565b600060ff821660ff84168060ff03821115612e5957612e59613158565b019392505050565b600082612e7c57634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611612e935750612ebe565b818704821115612ea557612ea5613158565b80861615612eb257918102915b9490941c938002612e84565b94509492505050565b60006124b260001960ff851684600082612ee3575060016124b2565b81612ef0575060006124b2565b8160018114612f065760028114612f1057612f3d565b60019150506124b2565b60ff841115612f2157612f21613158565b6001841b915084821115612f3757612f37613158565b506124b2565b5060208310610133831016604e8410600b8410161715612f70575081810a83811115612f6b57612f6b613158565b6124b2565b612f7d8484846001612e81565b808604821115612f8f57612f8f613158565b02949350505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81841382841385830485118282161615612fd757612fd7613158565b7f80000000000000000000000000000000000000000000000000000000000000008487128682058812818416161561301157613011613158565b85871292508782058712848416161561302c5761302c613158565b8785058712818416161561304257613042613158565b505050929093029392505050565b600081600019048311821515161561306a5761306a613158565b500290565b6000808312837f8000000000000000000000000000000000000000000000000000000000000000018312811516156130a9576130a9613158565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183138116156130dd576130dd613158565b50500390565b6000828210156130f5576130f5613158565b500390565b600060ff821660ff84168082101561311457613114613158565b90039392505050565b600060001982141561313157613131613158565b5060010190565b600060ff821660ff81141561314f5761314f613158565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220baa21ed645acf39843cef0f13074164f8c8be8cf22d3c3d6d80e6f376834b9e464736f6c63430008000033";

type MinimaConstructorParams =
  | [linkLibraryAddresses: MinimaLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Minima__factory extends ContractFactory {
  constructor(...args: MinimaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Minima__factory.linkBytecode(linkLibraryAddresses), signer);
    }
    this.contractName = "Minima";
  }

  static linkBytecode(linkLibraryAddresses: MinimaLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d6e5c99d87b2345c74da754aa234a52975\\$__", "g"),
      linkLibraryAddresses["contracts/OpenMath.sol:OpenMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    initialTokens: string[],
    initialDexes: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minima> {
    return super.deploy(
      initialTokens,
      initialDexes,
      overrides || {}
    ) as Promise<Minima>;
  }
  getDeployTransaction(
    initialTokens: string[],
    initialDexes: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialTokens,
      initialDexes,
      overrides || {}
    );
  }
  attach(address: string): Minima {
    return super.attach(address) as Minima;
  }
  connect(signer: Signer): Minima__factory {
    return super.connect(signer) as Minima__factory;
  }
  static readonly contractName: "Minima";
  public readonly contractName: "Minima";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimaInterface {
    return new utils.Interface(_abi) as MinimaInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minima {
    return new Contract(address, _abi, signerOrProvider) as Minima;
  }
}

export interface MinimaLibraryAddresses {
  ["contracts/OpenMath.sol:OpenMath"]: string;
}
