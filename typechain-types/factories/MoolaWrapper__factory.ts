/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MoolaWrapper, MoolaWrapperInterface } from "../MoolaWrapper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiptToken",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180546001600160a01b03191673970b12522ca9b4054807a2c5b736149a5be6f67017905534801561003657600080fd5b5061004761004261004c565b610050565b6100a0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610adf806100af6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063da48999711610050578063da489997146100bf578063f2fde38b146100d2578063fe029156146100e557610072565b8063715018a6146100775780638da5cb5b14610081578063c515ee231461009f575b600080fd5b61007f6100f8565b005b61008961014c565b60405161009691906108af565b60405180910390f35b6100b26100ad3660046107fb565b61015b565b6040516100969190610a64565b61007f6100cd3660046107c9565b6101bb565b61007f6100e03660046107af565b610278565b6100b26100f3366004610836565b6102e9565b6101006106ea565b6001600160a01b031661011161014c565b6001600160a01b0316146101405760405162461bcd60e51b815260040161013790610a2f565b60405180910390fd5b61014a60006106ee565b565b6000546001600160a01b031690565b6001600160a01b038381166000908152600260205260408120549091848116911614806101a457506001600160a01b038381166000908152600260205260409020548116908516145b156101b05750806101b4565b5060005b9392505050565b6101c36106ea565b6001600160a01b03166101d461014c565b6001600160a01b0316146101fa5760405162461bcd60e51b815260040161013790610a2f565b6001600160a01b0382811660009081526002602052604090205416156102325760405162461bcd60e51b8152600401610137906109c1565b6001600160a01b03918216600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b6102806106ea565b6001600160a01b031661029161014c565b6001600160a01b0316146102b75760405162461bcd60e51b815260040161013790610a2f565b6001600160a01b0381166102dd5760405162461bcd60e51b815260040161013790610964565b6102e6816106ee565b50565b6000806000806102f98888610756565b6001600160a01b03838116600090815260026020526040902054939650919450925083811691161461033d5760405162461bcd60e51b81526004016101379061092d565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038916906323b872dd9061038690339030908b906004016108c3565b602060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190610877565b506001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038a81169263095ea7b39261042692909116908a906004016108e7565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610877565b6104945760405162461bcd60e51b8152600401610137906109f8565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038916906370a08231906104dc9030906004016108af565b60206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190610897565b905081156105b7576001546040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e8eda9df90610584908c908b903090600090600401610900565b600060405180830381600087803b15801561059e57600080fd5b505af11580156105b2573d6000803e3d6000fd5b505050505b600081896001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105e691906108af565b60206040518083038186803b1580156105fe57600080fd5b505afa158015610612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106369190610897565b6106409190610a6d565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038a169063a9059cbb9061068a90339085906004016108e7565b602060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610877565b509998505050505050505050565b3390565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03818116600090815260026020526040902054839183916001918481169116141561078c575082915083905060005b9250925092565b80356001600160a01b03811681146107aa57600080fd5b919050565b6000602082840312156107c0578081fd5b6101b482610793565b600080604083850312156107db578081fd5b6107e483610793565b91506107f260208401610793565b90509250929050565b60008060006060848603121561080f578081fd5b61081884610793565b925061082660208501610793565b9150604084013590509250925092565b6000806000806080858703121561084b578081fd5b61085485610793565b935061086260208601610793565b93969395505050506040820135916060013590565b600060208284031215610888578081fd5b815180151581146101b4578182fd5b6000602082840312156108a8578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b60208082526013908201527f5061697220646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4173736574207061697220616c7265616479206c697374656400000000000000604082015260600190565b6020808252600f908201527f417070726f76616c206661696c65640000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b600082821015610aa4577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50039056fea2646970667358221220af7dea1f9f61e37c3b8070da420cf8f88f396f46a7bd625fefd527f6ebf43f3764736f6c63430008000033";

type MoolaWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoolaWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoolaWrapper__factory extends ContractFactory {
  constructor(...args: MoolaWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MoolaWrapper";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MoolaWrapper> {
    return super.deploy(overrides || {}) as Promise<MoolaWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MoolaWrapper {
    return super.attach(address) as MoolaWrapper;
  }
  connect(signer: Signer): MoolaWrapper__factory {
    return super.connect(signer) as MoolaWrapper__factory;
  }
  static readonly contractName: "MoolaWrapper";
  public readonly contractName: "MoolaWrapper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoolaWrapperInterface {
    return new utils.Interface(_abi) as MoolaWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MoolaWrapper {
    return new Contract(address, _abi, signerOrProvider) as MoolaWrapper;
  }
}
